#main-wrap {
  --main-max-width: calc(
    (100vh - #{$site-header-outer-height} - #{$col1-uniboard-controls} - #{$hands-gap}) / 12 * 9
  );

  @include breakpoint($mq-col2) {
    --main-max-width: auto;
  }
}

.puzzle {
  grid-area: main;
  display: grid;
  grid-template-areas:
    'board'
    'controls'
    'tools'
    'session'
    'kb-move'
    'side';

  &__side {
    @extend %zen;

    grid-area: side;
  }

  &__board {
    grid-area: board;
  }

  &__tools {
    grid-area: tools;
  }

  &__controls {
    @extend %zen;

    grid-area: controls;
    height: $col3-uniboard-controls;
  }

  &__session {
    @extend %zen;

    grid-area: session;
    align-self: start;
  }

  .eval-gauge {
    grid-area: gauge;
  }

  .keyboard-move {
    grid-area: kb-move;
    margin-bottom: 0.5em;
  }

  &__moves {
    display: none;
  }

  @include breakpoint($mq-col2) {
    grid-template-rows: fit-content(0);
    grid-template-columns: var(--col2-uniboard-main-size) $block-gap $col2-uniboard-table;
    grid-template-areas:
      'board   gauge tools'
      'session .     controls'
      'kb-move .     .'
      'side    side  side';

    &__moves {
      display: block;
    }
  }

  @include breakpoint($mq-col3) {
    grid-template-rows: fit-content(0);
    grid-template-columns: $col3-uniboard-side $block-gap var(--col3-uniboard-main-size) $block-gap $col3-uniboard-table;
    grid-template-areas:
      'side . board   gauge tools'
      'side . session .     controls'
      'side . kb-move .     .'
      'side . .       .     .';
  }
}

@include breakpoint($mq-col1-uniboard) {
  .hand {
    &-top {
      margin-bottom: #{$block-gap};
    }

    &-bottom {
      margin-top: #{$block-gap};
    }
  }
}
