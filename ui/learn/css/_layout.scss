@use 'pkg:breakpoint-sass' as breakpoint;
@use 'pkg:common/abstract/media-queries';
@use 'pkg:common/abstract/uniboard';
@use 'pkg:common/abstract/variables';
@use 'local';

#main-wrap {
  --main-max-width: calc(
    (100vh - #{variables.$site-header-outer-height} - #{uniboard.$hands-gap}) / 12 * 9
  );

  @include breakpoint.breakpoint(local.$mq-col2) {
    --main-max-width: auto;
  }
}

.learn {
  grid-area: main;
  display: grid;
  grid-gap: 3vmin;

  &__side {
    grid-area: side;
  }

  &__main {
    grid-area: main;
  }

  &__table {
    grid-area: table;
  }

  &--run {
    grid-template-areas:
      'main'
      'table'
      'side';
    grid-gap: 0;
    row-gap: 2vmin;
  }

  &--map {
    grid-template-areas:
      'side'
      'main';
  }

  @include breakpoint.breakpoint(local.$mq-col2) {
    &--run {
      grid-template-rows: fit-content(0);
      grid-template-columns:
        var(--col2-uniboard-main-size)
        variables.$block-gap uniboard.$col2-uniboard-table;
      grid-template-areas:
        'main . table'
        'side . .';
    }

    &--map {
      grid-template-areas: 'side main';
      grid-template-columns: 240px auto;

      @include breakpoint.breakpoint(media-queries.$mq-x-large) {
        grid-template-columns: 240px 960px;
      }
    }
  }

  @include breakpoint.breakpoint(local.$mq-col3) {
    &--run {
      grid-template-rows: fit-content(0);
      grid-template-columns:
        uniboard.$col3-uniboard-side variables.$block-gap var(--col3-uniboard-main-size)
        variables.$block-gap uniboard.$col3-uniboard-table;
      grid-template-areas:
        'side . main . table'
        'side . .    . .';
    }
  }
}
